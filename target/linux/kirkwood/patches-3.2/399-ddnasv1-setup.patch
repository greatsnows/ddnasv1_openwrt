--- a/arch/arm/mach-kirkwood/ts219-setup.c	2010-12-10 05:29:45.000000000 +0800
+++ b/arch/arm/mach-kirkwood/ts219-setup.c	2011-06-13 15:54:36.000000000 +0800
@@ -1,7 +1,7 @@
 /*
  *
- * QNAP TS-11x/TS-21x Turbo NAS Board Setup
- *
+ * QNAP TS-119/TS-219 Turbo NAS Board Setup
+ * DDNAS Wireless V1 Board Setup
  * Copyright (C) 2009  Martin Michlmayr <tbm@cyrius.com>
  * Copyright (C) 2008  Byron Bradley <byron.bbradley@gmail.com>
  *
@@ -14,41 +14,137 @@
 #include <linux/kernel.h>
 #include <linux/init.h>
 #include <linux/platform_device.h>
+#include <linux/mtd/physmap.h>
+#include <linux/spi/flash.h>
+#include <linux/spi/spi.h>
+#include <linux/spi/orion_spi.h>
 #include <linux/i2c.h>
 #include <linux/mv643xx_eth.h>
 #include <linux/ata_platform.h>
 #include <linux/gpio_keys.h>
 #include <linux/input.h>
+#include <linux/timex.h>
+#include <linux/serial_reg.h>
+#include <linux/pci.h>
 #include <asm/mach-types.h>
 #include <asm/mach/arch.h>
 #include <mach/kirkwood.h>
 #include "common.h"
 #include "mpp.h"
-#include "tsx1x-common.h"
+#include <linux/leds.h>
+
+/****************************************************************************
+ * 16 MiB NOR flash. The struct mtd_partition is not in the same order as the
+ *     partitions on the device because we want to keep compatability with
+ *     the QNAP firmware.
+ * Layout as used by QNAP:
+ *  0x00000000-0x00080000 : "U-Boot"
+ *  0x00200000-0x00400000 : "Kernel"
+ *  0x00400000-0x00d00000 : "RootFS"
+ *  0x00d00000-0x01000000 : "RootFS2"
+ *  0x00080000-0x000c0000 : "U-Boot Config"
+ *  0x000c0000-0x00200000 : "NAS Config"
+ *
+ * We'll use "RootFS1" instead of "RootFS" to stay compatible with the layout
+ * used by the QNAP TS-109/TS-209.
+ *
+ ***************************************************************************/
+
+static struct mtd_partition qnap_ts219_partitions[] = {
+	{
+		.name		= "U-Boot",
+		.size		= 0x00080000,
+		.offset		= 0,
+		.mask_flags	= MTD_WRITEABLE,
+	}, {
+		.name		= "Kernel",
+		.size		= 0x00200000,
+		.offset		= 0x00100000,
+	}, {
+		.name		= "rootfs",
+		.size		= 0x00d00000,
+		.offset		= 0x00300000,
+	}, {
+		.name		= "firmware",
+		.size		= 0x00f00000,
+		.offset		= 0x00100000,
+	},
+};
+
+static const struct flash_platform_data qnap_ts219_flash = {
+	.type		= "m25p128",
+	.name		= "spi_flash",
+	.parts		= qnap_ts219_partitions,
+	.nr_parts	= ARRAY_SIZE(qnap_ts219_partitions),
+};
 
-static struct i2c_board_info __initdata qnap_ts219_i2c_rtc = {
-	I2C_BOARD_INFO("s35390a", 0x30),
+static struct spi_board_info __initdata qnap_ts219_spi_slave_info[] = {
+	{
+		.modalias	= "m25p80",
+		.platform_data	= &qnap_ts219_flash,
+		.irq		= -1,
+		.max_speed_hz	= 20000000,
+		.bus_num	= 0,
+		.chip_select	= 0,
+	},
 };
 
+//static struct i2c_board_info __initdata qnap_ts219_i2c_rtc = {
+//	I2C_BOARD_INFO("s35390a", 0x30),
+//};
+
 static struct mv643xx_eth_platform_data qnap_ts219_ge00_data = {
 	.phy_addr	= MV643XX_ETH_PHY_ADDR(8),
 };
+static struct mv643xx_eth_platform_data qnap_ts219_ge01_data = {
+	.phy_addr	= MV643XX_ETH_PHY_ADDR(24),
+};
+
 
 static struct mv_sata_platform_data qnap_ts219_sata_data = {
 	.n_ports	= 2,
 };
 
+static struct gpio_led qnap_ts219_led_pins[] = {
+	{
+		.name			= "Ddnas:Power",
+		.default_trigger	= "default-on",
+		.gpio			= 42,
+	},
+	{
+		.name			= "Ddnas:Usb",
+		.gpio			= 37,
+	},
+	{
+		.name			= "Ddnas:Internet",
+		.gpio			= 43,	
+	},
+};
+
+static struct gpio_led_platform_data qnap_ts219_led_data = {
+	.leds		= qnap_ts219_led_pins,
+	.num_leds	= ARRAY_SIZE(qnap_ts219_led_pins),
+};
+
+static struct platform_device qnap_ts219_leds = {
+	.name	= "leds-gpio",
+	.id	= -1,
+	.dev	= {
+	.platform_data	= &qnap_ts219_led_data,
+	}
+};
+
 static struct gpio_keys_button qnap_ts219_buttons[] = {
 	{
-		.code		= KEY_COPY,
+		.code		= BTN_0,
 		.gpio		= 15,
-		.desc		= "USB Copy",
+		.desc		= "BTN_0",
 		.active_low	= 1,
 	},
 	{
-		.code		= KEY_RESTART,
+		.code		= BTN_1,
 		.gpio		= 16,
-		.desc		= "Reset",
+		.desc		= "BTN_1",
 		.active_low	= 1,
 	},
 };
@@ -80,57 +176,86 @@
 	MPP11_UART0_RXD,
 	MPP13_UART1_TXD,	/* PIC controller */
 	MPP14_UART1_RXD,	/* PIC controller */
-	MPP15_GPIO,		/* USB Copy button (on devices with 88F6281) */
-	MPP16_GPIO,		/* Reset button (on devices with 88F6281) */
-	MPP36_GPIO,		/* RAM: 0: 256 MB, 1: 512 MB */
-	MPP37_GPIO,		/* Reset button (on devices with 88F6282) */
-	MPP43_GPIO,		/* USB Copy button (on devices with 88F6282) */
-	MPP44_GPIO,		/* Board ID: 0: TS-11x, 1: TS-21x */
+	MPP15_GPIO,		/* USB Copy button */
+	MPP16_GPIO,		/* Reset button */
+	MPP36_GPIO, 
+	MPP37_GPIO,		/*Input for OTB button*/
+	MPP42_GPIO,
+	MPP43_GPIO,
+	MPP44_GPIO,
+	MPP45_GPIO,
+	MPP46_GPIO,
+	MPP47_GPIO,
+	MPP48_GPIO,
 	0
 };
 
-static void __init qnap_ts219_init(void)
+
+/*****************************************************************************
+ * QNAP TS-x19 specific power off method via UART1-attached PIC
+ ****************************************************************************/
+
+//#define UART1_REG(x)	(UART1_VIRT_BASE + ((UART_##x) << 2))
+/* 
+void qnap_ts219_power_off(void)
 {
-	u32 dev, rev;
+	// 19200 baud divisor 
+	const unsigned divisor = ((kirkwood_tclk + (8 * 19200)) / (16 * 19200));
+
+	pr_info("%s: triggering power-off...\n", __func__);
+
+	// hijack UART1 and reset into sane state (19200,8n1) 
+	writel(0x83, UART1_REG(LCR));
+	writel(divisor & 0xff, UART1_REG(DLL));
+	writel((divisor >> 8) & 0xff, UART1_REG(DLM));
+	writel(0x03, UART1_REG(LCR));
+	writel(0x00, UART1_REG(IER));
+	writel(0x00, UART1_REG(FCR));
+	writel(0x00, UART1_REG(MCR));
 
+	// send the power-off command 'A' to PIC 
+	writel('A', UART1_REG(TX));
+}
+ */
+static void __init qnap_ts219_init(void)
+{
 	/*
 	 * Basic setup. Needs to be called early.
 	 */
+	u32 dev, rev;
 	kirkwood_init();
 	kirkwood_mpp_conf(qnap_ts219_mpp_config);
 
 	kirkwood_uart0_init();
-	kirkwood_uart1_init(); /* A PIC controller is connected here. */
-	qnap_tsx1x_register_flash();
-	kirkwood_i2c_init();
-	i2c_register_board_info(0, &qnap_ts219_i2c_rtc, 1);
-
-	kirkwood_pcie_id(&dev, &rev);
-	if (dev == MV88F6282_DEV_ID) {
-		qnap_ts219_buttons[0].gpio = 43; /* USB Copy button */
-		qnap_ts219_buttons[1].gpio = 37; /* Reset button */
-		qnap_ts219_ge00_data.phy_addr = MV643XX_ETH_PHY_ADDR(0);
-	}
-
+	//kirkwood_uart1_init(); /* A PIC controller is connected here. */
+	spi_register_board_info(qnap_ts219_spi_slave_info,
+				ARRAY_SIZE(qnap_ts219_spi_slave_info));
+	kirkwood_spi_init();
+	//kirkwood_i2c_init();
+	//i2c_register_board_info(0, &qnap_ts219_i2c_rtc, 1);
 	kirkwood_ge00_init(&qnap_ts219_ge00_data);
+	kirkwood_ge01_init(&qnap_ts219_ge01_data);
 	kirkwood_sata_init(&qnap_ts219_sata_data);
 	kirkwood_ehci_init();
-	platform_device_register(&qnap_ts219_button_device);
 
-	pm_power_off = qnap_tsx1x_power_off;
+
+	kirkwood_pcie_id(&dev, &rev);
+
+	platform_device_register(&qnap_ts219_leds);
+	platform_device_register(&qnap_ts219_button_device);
 
 }
 
 static int __init ts219_pci_init(void)
 {
-	if (machine_is_ts219())
-		kirkwood_pcie_init(KW_PCIE0);
+   if (machine_is_ts219())
+           kirkwood_pcie_init(KW_PCIE0);
 
-	return 0;
+   return 0;
 }
 subsys_initcall(ts219_pci_init);
 
-MACHINE_START(TS219, "QNAP TS-119/TS-219")
+MACHINE_START(TS219, "DDNAS Wireless V1")
 	/* Maintainer: Martin Michlmayr <tbm@cyrius.com> */
 	.atag_offset	= 0x100,
 	.init_machine	= qnap_ts219_init,
